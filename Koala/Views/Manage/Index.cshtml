@model Koala.Models.ManageViewModel

@{
    ViewBag.Title = "Perfil de usuario";
}

<h2 class="page-header">@ViewBag.Title</h2>

<div>
    <ul class="nav nav-tabs">
        <li class="active"><a href="#perfil" data-toggle="tab">Datos personales</a></li>
        <li><a href="#pedidos" data-toggle="tab">Mis compras</a></li>
    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active in" id="perfil">

            @using (Html.BeginForm("EditUser", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Profile.UsuarioID)

                <div class="row" style="margin-top: 35px;">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Nombre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Apellidos, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Apellidos, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Nick, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Nick, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Nick, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Contraseña, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Contraseña, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.DNI, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.DNI, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Profile.DNI, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.FechaNacimiento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Direccion, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Direccion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Poblacíon, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Poblacíon, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Poblacíon, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Profile.Telefono, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Profile.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Profile.Telefono, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-8 col-lg-offset-4">
                                        <div class="card avatar">
                                            @if (Model.Profile != null)
                                            {
                                                if (string.IsNullOrEmpty(Model.Profile.RutaFoto))
                                                {
                                                    <img class="card-img-top" src="~/Content/Imagenes/koala.png" />
                                                }
                                                else
                                                {
                                                    <img class="card-img-top" src="@Model.Profile.RutaFoto" />
                                                }
                                            }
                                            else
                                            {
                                                <img class="card-img-top" src="~/Content/Imagenes/koala.png" />
                                            }
                                            <div class="card-block">
                                               <div class="input-group">
                                                    <span class="input-group-btn">
                                                        <span class="btn btn-default btn-file">
                                                            <span class="glyphicon glyphicon-folder-open"></span>&nbsp;Buscar archivo...
                                                            @Html.TextBoxFor(m => m.Profile.FotoAttachment, new
                                                            {
                                                                type = "file",
                                                                accept = "image/*",
                                                                @class = "custom-file-input"
                                                            })
                                                        </span>
                                                    </span>
                                                    @Html.TextBoxFor(m => m.Profile.NombreFoto, new
                                                    {
                                                        @class = "form-control text-right avatar-input",
                                                        @readonly = "",
                                                        id = "attachment-input"
                                                    })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Profile.FotoAttachment, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.Profile.FotoAttachment, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        <div class="input-group">
                                            <span class="input-group-btn">
                                                <span class="btn btn-default btn-file">
                                                    <span class="glyphicon glyphicon-folder-open"></span>&nbsp;Buscar archivo...
                                                    @Html.TextBoxFor(m => m.Profile.FotoAttachment, new { type = "file", accept = "image/*" })
                                                </span>
                                            </span>
                                            @Html.TextBoxFor(m => m.Profile.NombreFoto, new
                                            {
                                                @class = "form-control text-right",
                                                @readonly = "",
                                                id = "logo-attachment-input",
                                                @style = "width: 135px;"
                                            })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Profile.FotoAttachment, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4">
                                @*<a class="btn btn-default" href="@Url.Action("Index")">
                                    <span class="glyphicon glyphicon-chevron-left"></span>&nbsp;Volver
                                </a>*@
                                <button type="submit" class="btn btn-primary">
                                    <span class="glyphicon glyphicon-ok"></span>&nbsp;Guardar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="tab-pane fade" id="pedidos">
            <div class="row" style="margin-top: 35px;">
                <table class="table">
                    <tr>
                        <th>
                            ID
                        </th>
                        <th>
                            Num. Artículos
                        </th>
                        <th>
                            Productos
                        </th>
                        <th>
                            Fecha pedido
                        </th>
                        <th>
                            Fecha confirmado
                        </th>
                        <th>
                            Fecha enviado
                        </th>
                        <th>
                            Fecha recibido
                        </th>
                        <th>
                            Total precio
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumPedido)
                            </td>
                            <td style="text-align:center;">
                                @Html.DisplayFor(modelItem => item.NumArticulos)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Descripcion)
                            </td>
                            <td>
                                @{
                                    string parameterValuePedido = item.FechaPedido.ToShortDateString();
                                }
                                @Html.DisplayFor(modelItem => parameterValuePedido)
                            </td>
                            <td>
                                @{
                                    string parameterValueConfirmado = item.FechaConfirmado.ToShortDateString();
                                }
                                @Html.DisplayFor(modelItem => parameterValueConfirmado)
                            </td>
                            <td>
                                @{
                                    string parameterValueEnviado = item.FechaEnviado.ToShortDateString();
                                }
                                @Html.DisplayFor(modelItem => parameterValueEnviado)
                            </td>
                            <td>
                                @{
                                    string parameterValueRecibido = item.FechaRecibido.ToShortDateString();
                                }
                                @Html.DisplayFor(modelItem => parameterValueRecibido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalPrecio) €
                            </td>
                            <td>
                                @Html.ActionLink("Detalle", "OrderDetails", new { id = item.NumPedido })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<br />
<br />
